name: CI Pass Label

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
  check_suite:
    types: [completed]
  check_run:
    types: [completed]

jobs:
  manage-ci-pass-label:
    runs-on: ubuntu-latest
    if: github.event.pull_request != null || github.event.check_suite != null
    permissions:
      contents: read
      pull-requests: write
      statuses: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Remove label if exists
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const labelToRemove = 'ci-pass';
            const prNumber = context.payload.pull_request.number;
            const { data: labels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            const hasLabel = labels.some(label => label.name === labelToRemove);
            if (hasLabel) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                name: labelToRemove
              });
              console.log(`Label "${labelToRemove}" removed.`);
            } else {
              console.log(`Label "${labelToRemove}" does not exist. Skipping removal.`);
            }

      - name: Wait for all checks to complete
        uses: peter-evans/wait-for-check@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          check-name: ".*"
          ref: ${{ github.event.pull_request.head.sha }}
          wait-interval: 10
          timeout: 600

      - name: Check if all checks passed
        id: check-status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sha = context.payload.pull_request.head.sha;

            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: sha,
            });

            const failed = checks.check_runs.filter(c => c.conclusion !== 'success');
            if (failed.length > 0) {
              core.setFailed(`Some checks failed: ${failed.map(c => c.name).join(', ')}`);
            } else {
              core.setOutput('result', 'pass');
            }

      - name: Add ci-pass label if all checks pass
        if: steps.check-status.outputs.result == 'pass'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: ci-pass

      - name: Remove ci-pass label if checks fail
        if: steps.check-status.outputs.result == 'fail'
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: ci-pass
