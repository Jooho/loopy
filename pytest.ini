[pytest]
log_cli = 1
addopts = "-s"
log_level = INFO
log_cli_level = INFO
testpaths = tests
pythonpath = src
markers =
  core: loopy core modules to initialize loopy
  cli: loopy cli commands(roles,units,playbooks) tests
  cli_roles: roles sub commands(list,test,show,run) tests
  cli_units: units sub commands(listshow,run) tests
  cli_playbooks: playbooks sub commands(list,show,run) tests
  cli_report: loopy report

  fvt: loopy fvt tests - test main.py or main.sh
  fvt_test: loopy fvt tests - test main.py or main.sh
  fvt_roles: loopy fvt roles tests
  fvt_units: loopy fvt units tests
  fvt_playbooks: loopy fvt playbooks tests
  
  
  e2e: loopy e2e tests
  e2e_test: loopy e2e tests
  e2e_roles: loopy e2e roles tests
  e2e_units: loopy e2e units tests
  e2e_playbooks: loopy e2e playbooks tests


  cluster_tests: tests needs a cluster(run)
  non_cluster_tests: tests does not need a cluster(run)
    
filterwarnings =
    ignore::pytest.PytestCollectionWarning    
; asyncio_default_fixture_loop_scope = fuction